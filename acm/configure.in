dnl Process this file with autoconf to produce a configure script.

AC_PREREQ(2.57)
AC_INIT(ibacm, 1.0.7, linux-rdma@vger.kernel.org)
AC_CONFIG_SRCDIR([src/acm.c])
AC_CONFIG_AUX_DIR(config)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(ibacm, 1.0.7)
m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])

AM_PROG_LIBTOOL

AC_ARG_ENABLE(libcheck, [  --disable-libcheck  do not test for presence of ib libraries],
[       if test "$enableval" = "no"; then
                disable_libcheck=yes
        fi
])

dnl Checks for programs
AC_PROG_CC

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_CHECK_SIZEOF(long)

dnl Checks for libraries
if test "$disable_libcheck" != "yes"; then
AC_CHECK_LIB(ibverbs, ibv_get_device_list, [],
    AC_MSG_ERROR([ibv_get_device_list() not found.  ibacm requires libibverbs.]))
AC_CHECK_LIB(rdmacm, rselect, [],
    AC_MSG_ERROR([rselect() not found.  ibacm requires librdmacm.]))
AC_CHECK_LIB(ibumad, umad_send, [],
    AC_MSG_ERROR([umad_send() not found.  ibacm requires libibumad.]))
fi

dnl Checks for header files.
AC_HEADER_STDC
if test "$disable_libcheck" != "yes"; then
AC_CHECK_HEADER(infiniband/verbs.h, [],
    AC_MSG_ERROR([<infiniband/verbs.h> not found.  Is libibverbs installed?]))
AC_CHECK_HEADER(rdma/rsocket.h, [],
    AC_MSG_ERROR([<rdma/rsocket.h> not found.  Is librdmacm installed?]))

dnl Checks for extended rates support in verbs
AC_LANG(C)
AC_MSG_CHECKING([extended rates verbs support])
AC_COMPILE_IFELSE(
    [AC_LANG_PROGRAM(
        [[#include <infiniband/verbs.h>]],
	[[
          enum ibv_rate rate;
          if (rate == IBV_RATE_14_GBPS)
              return 1;
          return 0;
        ]])],
        [ AC_MSG_RESULT([yes])
          AC_DEFINE([HAVE_IBA_EXTENDED_RATES], [1], [extended rates supported in verbs])
        ],
        [ AC_MSG_RESULT([no])
          AC_DEFINE([HAVE_IBA_EXTENDED_RATES], [0], [extended rates not supported in verbs])
        ]
)

dnl Checks for getsockopt RDMA_ROUTE support in librdmacm.
AC_LANG(C)
AC_MSG_CHECKING([rsockets getsockopt RDMA_ROUTE])
AC_RUN_IFELSE(
    [AC_LANG_PROGRAM(
        [[#include <stdio.h>
          #include <errno.h>
          #include <netinet/in.h>
          #include <netinet/tcp.h>
          #include <sys/types.h>
          #include <rdma/rsocket.h>
          #include <infiniband/ib.h>]],
        [[
          int rsock;
          struct ibv_path_data route;
          socklen_t route_len = sizeof(route) - 1;
          rsock = rsocket(AF_IB, SOCK_STREAM, 0);
          if (rsock < 0)
              return 1;
          rgetsockopt(rsock, SOL_RDMA, RDMA_ROUTE, &route, &route_len);
          rclose(rsock);
          if (errno != EINVAL)
              return 1;
          return 0;
        ]])],
        [ AC_MSG_RESULT([yes]) ],
        [ AC_MSG_RESULT([no])
          AC_MSG_WARN([rsockets does not support getsockopt RDMA_ROUTE.  librdmacm 1.0.19 or beyond is needed.])
        ]
)

AC_CHECK_MEMBER(struct umad_hdr.base_version, [],
    AC_MSG_ERROR([struct umad_hdr not found.  A newer version of libibumad is required.]),
    [#include <infiniband/umad_types.h>])
fi

dnl Check for pthread_setname_np function
AC_CHECK_FUNC(pthread_setname_np,
    AC_DEFINE(HAVE_PTHREAD_SET_NAME_NP, [1], [Define if using pthread_setname_np]))

dnl Define package version
commit="`git log -n 1 --pretty=format:"%h" 2> /dev/null`"
if test "$commit" == "" ; then
	ver="${PACKAGE_VERSION}"
else
	ver="${PACKAGE_VERSION}_${commit}"
	git diff-index --quiet HEAD -- ../ > /dev/null 2>&1
	if test "$?" == "1" ; then
		ver="${ver}_dirty"
	fi
fi
AC_DEFINE_UNQUOTED([IB_SSA_VERSION], ["$ver"], [ibssa package version])

dnl Check for gcc atomic intrinsics
AC_MSG_CHECKING(compiler support for atomics)
AC_TRY_LINK([int i = 0;],
    [ return __sync_add_and_fetch(&i, 1) != __sync_sub_and_fetch(&i, 1); ],
    [ AC_MSG_RESULT(yes) ],
    [
        AC_MSG_RESULT(no)
        AC_DEFINE(DEFINE_ATOMICS, 1, [Set to 1 to implement atomics])
    ])

AC_CACHE_CHECK(whether ld accepts --version-script, ac_cv_version_script,
    if test -n "`$LD --help < /dev/null 2>/dev/null | grep version-script`"; then
        ac_cv_version_script=yes
    else
        ac_cv_version_script=no
    fi)

AM_CONDITIONAL(HAVE_LD_VERSION_SCRIPT, test "$ac_cv_version_script" = "yes")

AC_ARG_VAR(rdmadir, [Directory for configuration files])
if test "x$rdmadir" = "x"; then
   AC_SUBST(rdmadir, rdma)
fi
AC_SUBST(sbindir)

AC_ARG_VAR(rdmascript, [Required dependency script name])
if test "x$rdmascript" = "x"; then
   if test -n "`grep -q 'release 6' /etc/redhat-release`"; then
      AC_SUBST(rdmascript, rdma)
   else
      AC_SUBST(rdmascript, openibd)
   fi
fi

AC_CONFIG_FILES([Makefile ibacm.spec ibacm.init])
AC_OUTPUT
