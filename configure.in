dnl Process this file with autoconf to produce a configure script.

AC_INIT(ibssa, 0.0.1, linux-rdma@vger.kernel.org)
AC_CONFIG_AUX_DIR([config])
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE

dnl Checks for programs
AC_PROG_CC
AC_PROG_LIBTOOL

dnl We use --version-script with ld if possible
AC_CACHE_CHECK(whether ld accepts --version-script, ac_cv_version_script,
    if test -n "`$LD --help < /dev/null 2>/dev/null | grep version-script`"; then
        ac_cv_version_script=yes
    else
        ac_cv_version_script=no
    fi)
AM_CONDITIONAL(HAVE_LD_VERSION_SCRIPT, test "$ac_cv_version_script" = "yes")

dnl PLUGIN specific checks

dnl the library version
libopensmssa_api_version=1:0:0
AC_SUBST(libopensmssa_api_version)

dnl OpenSM headers are in $includedir/infiniband
INC_TMP1="`eval echo ${includedir}/infiniband`"
INC_TMP2="`echo $INC_TMP1 | sed 's/^NONE/$ac_default_prefix/'`"
CFLAGS="$CFLAGS -I`eval echo $INC_TMP2`"
CPPFLAGS="$CPPFLAGS -I`eval echo $INC_TMP2`"

dnl Check for opensm compatibility header
AC_CHECK_HEADER([opensm/osm_event_plugin.h], , 
	AC_MSG_ERROR([opensm/osm_event_plugin.h not found.  libopensmssa requires opensm with event plugin support.]))

dnl END PLUGIN

dnl configuration and log directory

IBSSA_CONFIG_PATH_TMP1="`eval echo ${sysconfdir}`"
IBSSA_CONFIG_PATH_TMP2="`echo $IBSSA_CONFIG_PATH_TMP1 | sed 's/^NONE/$ac_default_prefix/'`"
IBSSA_CONFIG_PATH="`eval echo $IBSSA_CONFIG_PATH_TMP2`/ibssa"
AC_SUBST(IBSSA_CONFIG_PATH)
AC_DEFINE_UNQUOTED([IBSSA_CONFIG_PATH], "$IBSSA_CONFIG_PATH", [Define the path to configuration directory])

IBSSA_LOG_PATH_TMP1="`eval echo ${localstatedir}`"
IBSSA_LOG_PATH_TMP2="`echo $IBSSA_LOG_PATH_TMP1 | sed 's/^NONE/$ac_default_prefix/'`"
IBSSA_LOG_PATH="`eval echo $IBSSA_LOG_PATH_TMP2`/log"
AC_SUBST(IBSSA_LOG_PATH)
AC_DEFINE_UNQUOTED([IBSSA_LOG_PATH], "$IBSSA_LOG_PATH", [Define the path to log file directory])

dnl END configuration and log directory

dnl Define an input config option to control debug compile
AC_ARG_ENABLE(debug,    [  --enable-debug          Turn on debugging],
[case "${enableval}" in
	yes) debug=true ;;
	no)  debug=false ;;
	*) AC_MSG_ERROR(bad value ${enableval} for --enable-debug) ;;
esac],debug=false)
if test x$debug = xtrue ; then
	AC_DEFINE(IBSSA_DEBUG, 1, [ define 1 if build is in a debug mode ])
fi
AM_CONDITIONAL(DEBUG, test x$debug = xtrue)


dnl check for glib
PKG_CHECK_MODULES([GLIB], [glib-2.0], ac_glib=yes, ac_glib=no)
AM_CONDITIONAL([HAVE_GLIB], test "$ac_glib" = "yes")
if test "$ac_glib" = "yes"; then
   AC_DEFINE([HAVE_GLIB], 1, [Define to 1 to indicate GLIB support])
else
   AC_ERROR(ibssa requires glib 2.0)
fi

AC_CONFIG_FILES([Makefile plugin/Makefile ibssa.spec plugin/etc/opensmssa.conf])
AC_OUTPUT
